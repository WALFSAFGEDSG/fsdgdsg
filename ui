-- Midnight UI Library
-- A sleek, animated UI library inspired by Midnight Racing Hub Premium

local MidnightUI = {}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Configuration
local config = {
    font = Enum.Font.GothamSemibold,
    titleFont = Enum.Font.GothamBold,
    mainColor = Color3.fromRGB(30, 35, 45),
    accentColor = Color3.fromRGB(59, 130, 206),
    textColor = Color3.fromRGB(255, 255, 255),
    subTextColor = Color3.fromRGB(180, 180, 180),
    activeColor = Color3.fromRGB(46, 204, 113),
    inactiveColor = Color3.fromRGB(231, 76, 60),
    borderColor = Color3.fromRGB(59, 130, 206),
    backgroundColor = Color3.fromRGB(20, 25, 35),
    cornerRadius = UDim.new(0, 8),
    buttonCornerRadius = UDim.new(0, 6),
    elementHeight = 40,
    padding = 10,
    animationDuration = 0.3,
    animationEasingStyle = Enum.EasingStyle.Quint,
    animationEasingDirection = Enum.EasingDirection.Out
}

-- Utility Functions
local function createStroke(parent, thickness, color)
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = thickness
    stroke.Color = color
    stroke.Parent = parent
    return stroke
end

local function createCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = radius or config.cornerRadius
    corner.Parent = parent
    return corner
end

local function createShadow(parent, size)
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.BackgroundTransparency = 1
    shadow.Position = UDim2.new(0.5, 0, 0.5, size or 6)
    shadow.Size = UDim2.new(1, size * 2 or 12, 1, size * 2 or 12)
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.Image = "rbxassetid://5554236805"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.7
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(23, 23, 277, 277)
    shadow.ZIndex = parent.ZIndex - 1
    shadow.Parent = parent
    return shadow
end

local function createGradient(parent, colorSequence, rotation)
    local gradient = Instance.new("UIGradient")
    gradient.Color = colorSequence
    gradient.Rotation = rotation or 90
    gradient.Parent = parent
    return gradient
end

local function createRipple(button)
    local ripple = Instance.new("Frame")
    ripple.Name = "Ripple"
    ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ripple.BackgroundTransparency = 0.7
    ripple.BorderSizePixel = 0
    ripple.Position = UDim2.new(0, 0, 0, 0)
    ripple.Size = UDim2.new(0, 0, 0, 0)
    ripple.ZIndex = button.ZIndex + 1
    ripple.AnchorPoint = Vector2.new(0.5, 0.5)
    ripple.Parent = button
    
    local corner = createCorner(ripple, UDim.new(1, 0))
    
    return ripple
end

local function playRippleEffect(button, x, y)
    local ripple = createRipple(button)
    local buttonAbsoluteSize = button.AbsoluteSize
    local longestSide = math.max(buttonAbsoluteSize.X, buttonAbsoluteSize.Y) * 1.5
    
    ripple.Position = UDim2.new(0, x, 0, y)
    
    -- Animate the ripple
    local tweenInfo = TweenInfo.new(
        config.animationDuration * 1.5,
        config.animationEasingStyle,
        config.animationEasingDirection
    )
    
    local tween = TweenService:Create(ripple, tweenInfo, {
        Size = UDim2.new(0, longestSide, 0, longestSide),
        BackgroundTransparency = 1
    })
    
    tween:Play()
    
    tween.Completed:Connect(function()
        ripple:Destroy()
    end)
end

-- Create Main UI Window
function MidnightUI:CreateWindow(title, subtitle)
    -- Check if ScreenGui already exists
    local player = Players.LocalPlayer
    local playerGui = player:FindFirstChild("PlayerGui")
    local existingGui = playerGui:FindFirstChild("MidnightUI")
    
    if existingGui then
        existingGui:Destroy()
    end
    
    -- Create new ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "MidnightUI"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = playerGui
    
    -- Create main window
    local window = Instance.new("Frame")
    window.Name = "MainWindow"
    window.BackgroundColor3 = config.mainColor
    window.Size = UDim2.new(0, 500, 0, 350)
    window.Position = UDim2.new(0.5, 0, 0.5, 0)
    window.AnchorPoint = Vector2.new(0.5, 0.5)
    window.BorderSizePixel = 0
    window.ZIndex = 10
    window.Parent = screenGui
    
    -- Add window corner
    createCorner(window)
    
    -- Create window shadow
    createShadow(window, 15)
    
    -- Create background pattern (similar to the connected dots in the image)
    local pattern = Instance.new("ImageLabel")
    pattern.Name = "BackgroundPattern"
    pattern.BackgroundTransparency = 1
    pattern.Size = UDim2.new(1, 0, 1, 0)
    pattern.Image = "rbxassetid://6136039148" -- Network pattern
    pattern.ImageColor3 = Color3.fromRGB(59, 130, 206)
    pattern.ImageTransparency = 0.92
    pattern.ScaleType = Enum.ScaleType.Tile
    pattern.TileSize = UDim2.new(0, 100, 0, 100)
    pattern.ZIndex = 1
    pattern.Parent = window
    
    -- Add animated pattern effect
    local patternOffset = 0
    RunService.RenderStepped:Connect(function(dt)
        patternOffset = patternOffset + dt * 0.1
        pattern.Position = UDim2.new(0, math.sin(patternOffset) * 10, 0, math.cos(patternOffset) * 10)
    end)
    
    -- Create title bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.BackgroundColor3 = Color3.fromRGB(20, 25, 35)
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BorderSizePixel = 0
    titleBar.ZIndex = 11
    titleBar.Parent = window
    
    createCorner(titleBar)
    
    -- Window title
    local windowTitle = Instance.new("TextLabel")
    windowTitle.Name = "Title"
    windowTitle.BackgroundTransparency = 1
    windowTitle.Position = UDim2.new(0, 15, 0, 5)
    windowTitle.Size = UDim2.new(1, -30, 1, -10)
    windowTitle.Font = config.titleFont
    windowTitle.Text = title or "Midnight UI Premium"
    windowTitle.TextColor3 = config.textColor
    windowTitle.TextSize = 18
    windowTitle.TextXAlignment = Enum.TextXAlignment.Left
    windowTitle.TextYAlignment = Enum.TextYAlignment.Center
    windowTitle.ZIndex = 12
    windowTitle.Parent = titleBar
    
    -- Create window decorative buttons (red, yellow, green)
    local decorButtons = Instance.new("Frame")
    decorButtons.Name = "WindowButtons"
    decorButtons.BackgroundTransparency = 1
    decorButtons.Position = UDim2.new(0, 10, 0, 10)
    decorButtons.Size = UDim2.new(0, 60, 0, 20)
    decorButtons.ZIndex = 13
    decorButtons.Parent = titleBar
    
    local colors = {
        Color3.fromRGB(255, 95, 87),  -- Red
        Color3.fromRGB(255, 189, 46), -- Yellow
        Color3.fromRGB(39, 201, 63)   -- Green
    }
    
    for i, color in ipairs(colors) do
        local button = Instance.new("Frame")
        button.Name = "Button" .. i
        button.BackgroundColor3 = color
        button.Position = UDim2.new(0, (i-1) * 20, 0, 0)
        button.Size = UDim2.new(0, 12, 0, 12)
        button.ZIndex = 14
        button.Parent = decorButtons
        createCorner(button, UDim.new(1, 0))
    end
    
    -- User info area
    local userInfoFrame = Instance.new("Frame")
    userInfoFrame.Name = "UserInfo"
    userInfoFrame.BackgroundColor3 = config.backgroundColor
    userInfoFrame.BackgroundTransparency = 0.5
    userInfoFrame.Size = UDim2.new(1, -20, 0, 70)
    userInfoFrame.Position = UDim2.new(0, 10, 0, 50)
    userInfoFrame.ZIndex = 11
    userInfoFrame.Parent = window
    
    createCorner(userInfoFrame)
    
    -- User avatar
    local avatar = Instance.new("ImageLabel")
    avatar.Name = "Avatar"
    avatar.BackgroundColor3 = Color3.fromRGB(59, 130, 206)
    avatar.Size = UDim2.new(0, 50, 0, 50)
    avatar.Position = UDim2.new(0, 10, 0, 10)
    avatar.ZIndex = 12
    avatar.Image = "rbxassetid://6031280882" -- Default user icon
    avatar.Parent = userInfoFrame
    
    createCorner(avatar, UDim.new(1, 0))
    
    -- Username text
    local welcomeText = Instance.new("TextLabel")
    welcomeText.Name = "WelcomeText"
    welcomeText.BackgroundTransparency = 1
    welcomeText.Position = UDim2.new(0, 70, 0, 10)
    welcomeText.Size = UDim2.new(1, -180, 0, 30)
    welcomeText.Font = config.font
    welcomeText.Text = "Welcome to MRH Premium,"
    welcomeText.TextColor3 = config.textColor
    welcomeText.TextSize = 16
    welcomeText.TextXAlignment = Enum.TextXAlignment.Left
    welcomeText.ZIndex = 12
    welcomeText.Parent = userInfoFrame
    
    local usernameText = Instance.new("TextLabel")
    usernameText.Name = "Username"
    usernameText.BackgroundTransparency = 1
    usernameText.Position = UDim2.new(0, 70, 0, 35)
    usernameText.Size = UDim2.new(1, -180, 0, 20)
    usernameText.Font = config.font
    usernameText.Text = "@" .. player.Name
    usernameText.TextColor3 = config.subTextColor
    usernameText.TextSize = 14
    usernameText.TextXAlignment = Enum.TextXAlignment.Left
    usernameText.ZIndex = 12
    usernameText.Parent = userInfoFrame
    
    -- Time display
    local timeDisplay = Instance.new("TextLabel")
    timeDisplay.Name = "TimeDisplay"
    timeDisplay.BackgroundTransparency = 1
    timeDisplay.Position = UDim2.new(1, -80, 0, 20)
    timeDisplay.Size = UDim2.new(0, 70, 0, 30)
    timeDisplay.Font = config.font
    timeDisplay.Text = "00:00"
    timeDisplay.TextColor3 = config.textColor
    timeDisplay.TextSize = 16
    timeDisplay.TextXAlignment = Enum.TextXAlignment.Right
    timeDisplay.ZIndex = 12
    timeDisplay.Parent = userInfoFrame
    
    -- Update time
    local function updateTime()
        local date = os.date("*t")
        timeDisplay.Text = string.format("%02d:%02d", date.hour, date.min)
    end
    
    updateTime()
    spawn(function()
        while true do
            updateTime()
            wait(60)
        end
    end)
    
    -- Content container
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.BackgroundTransparency = 1
    contentFrame.Size = UDim2.new(1, -20, 1, -130)
    contentFrame.Position = UDim2.new(0, 10, 0, 130)
    contentFrame.ZIndex = 11
    contentFrame.Parent = window
    
    -- Status bar
    local statusBar = Instance.new("Frame")
    statusBar.Name = "StatusBar"
    statusBar.BackgroundColor3 = config.backgroundColor
    statusBar.BackgroundTransparency = 0.5
    statusBar.Size = UDim2.new(1, 0, 0, 40)
    statusBar.Position = UDim2.new(0, 0, 1, -40)
    statusBar.ZIndex = 11
    statusBar.Parent = window
    
    createCorner(statusBar)
    
    local statusText = Instance.new("TextLabel")
    statusText.Name = "StatusText"
    statusText.BackgroundTransparency = 1
    statusText.Position = UDim2.new(0, 15, 0, 0)
    statusText.Size = UDim2.new(0, 150, 1, 0)
    statusText.Font = config.font
    statusText.Text = "Status: "
    statusText.TextColor3 = config.textColor
    statusText.TextSize = 14
    statusText.TextXAlignment = Enum.TextXAlignment.Left
    statusText.ZIndex = 12
    statusText.Parent = statusBar
    
    local statusValue = Instance.new("TextLabel")
    statusValue.Name = "StatusValue"
    statusValue.BackgroundTransparency = 1
    statusValue.Position = UDim2.new(0, 65, 0, 0)
    statusValue.Size = UDim2.new(0, 80, 1, 0)
    statusValue.Font = config.font
    statusValue.Text = "Active"
    statusValue.TextColor3 = config.activeColor
    statusValue.TextSize = 14
    statusValue.TextXAlignment = Enum.TextXAlignment.Left
    statusValue.ZIndex = 12
    statusValue.Parent = statusBar
    
    -- Status bar icons
    local statusIcons = Instance.new("Frame")
    statusIcons.Name = "StatusIcons"
    statusIcons.BackgroundTransparency = 1
    statusIcons.Position = UDim2.new(1, -90, 0, 5)
    statusIcons.Size = UDim2.new(0, 80, 0, 30)
    statusIcons.ZIndex = 12
    statusIcons.Parent = statusBar
    
    local iconNames = {"refresh", "settings", "power"}
    local iconIds = {
        refresh = "rbxassetid://6031097226",
        settings = "rbxassetid://6031280882",
        power = "rbxassetid://6031090990"
    }
    
    for i, name in ipairs(iconNames) do
        local icon = Instance.new("ImageButton")
        icon.Name = name .. "Icon"
        icon.BackgroundTransparency = 1
        icon.Position = UDim2.new(0, (i-1) * 30, 0, 0)
        icon.Size = UDim2.new(0, 20, 0, 20)
        icon.Image = iconIds[name]
        icon.ImageColor3 = config.textColor
        icon.ZIndex = 13
        icon.Parent = statusIcons
        
        -- Add hover effect
        icon.MouseEnter:Connect(function()
            TweenService:Create(icon, TweenInfo.new(0.2), {ImageColor3 = config.accentColor}):Play()
        end)
        
        icon.MouseLeave:Connect(function()
            TweenService:Create(icon, TweenInfo.new(0.2), {ImageColor3 = config.textColor}):Play()
        end)
    end
    
    -- Pages container
    local pages = {}
    local pageButtons = {}
    local currentPage = nil
    
    -- Tabs container (appears when multiple pages exist)
    local tabsContainer = Instance.new("Frame")
    tabsContainer.Name = "TabsContainer"
    tabsContainer.BackgroundTransparency = 1
    tabsContainer.Size = UDim2.new(1, 0, 0, 30)
    tabsContainer.Position = UDim2.new(0, 0, 0, -35)
    tabsContainer.Visible = false
    tabsContainer.ZIndex = 12
    tabsContainer.Parent = contentFrame
    
    -- Window dragging functionality
    local dragging = false
    local dragInput
    local dragStart
    local startPos
    
    local function updateDrag(input)
        local delta = input.Position - dragStart
        window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = window.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateDrag(input)
        end
    end)
    
    -- Window methods
    local windowObj = {
        Window = window,
        ContentFrame = contentFrame
    }
    
    -- Create Pages
    function windowObj:AddPage(pageName, icon)
        local pageContainer = Instance.new("ScrollingFrame")
        pageContainer.Name = pageName .. "Page"
        pageContainer.BackgroundTransparency = 1
        pageContainer.Size = UDim2.new(1, 0, 1, 0)
        pageContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
        pageContainer.ScrollBarThickness = 4
        pageContainer.ScrollBarImageColor3 = config.accentColor
        pageContainer.Visible = false
        pageContainer.ZIndex = 12
        pageContainer.Parent = contentFrame
        
        local uiListLayout = Instance.new("UIListLayout")
        uiListLayout.Padding = UDim.new(0, 10)
        uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        uiListLayout.Parent = pageContainer
        
        local uiPadding = Instance.new("UIPadding")
        uiPadding.PaddingLeft = UDim.new(0, 5)
        uiPadding.PaddingRight = UDim.new(0, 5)
        uiPadding.PaddingTop = UDim.new(0, 5)
        uiPadding.PaddingBottom = UDim.new(0, 5)
        uiPadding.Parent = pageContainer
        
        -- Dynamic canvas size adjustment
        uiListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            pageContainer.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y + 10)
        end)
        
        -- Create page button if this isn't the first page
        if #pages >= 1 then
            -- Make tabs container visible if this is the second page
            if #pages == 1 then
                tabsContainer.Visible = true
                
                -- Move first page's elements to tab system
                local firstPage = pages[1]
                local firstPageName = firstPage.Name:gsub("Page", "")
                
                local firstTabButton = Instance.new("TextButton")
                firstTabButton.Name = firstPageName .. "Tab"
                firstTabButton.BackgroundColor3 = config.accentColor
                firstTabButton.Size = UDim2.new(0, 100, 1, 0)
                firstTabButton.Position = UDim2.new(0, 0, 0, 0)
                firstTabButton.Font = config.font
                firstTabButton.Text = firstPageName
                firstTabButton.TextColor3 = config.textColor
                firstTabButton.TextSize = 14
                firstTabButton.ZIndex = 13
                firstTabButton.Parent = tabsContainer
                
                createCorner(firstTabButton, UDim.new(0, 6))
                
                table.insert(pageButtons, firstTabButton)
                
                -- First tab button on click behavior
                firstTabButton.MouseButton1Click:Connect(function()
                    for _, p in ipairs(pages) do
                        p.Visible = false
                    end
                    
                    for _, b in ipairs(pageButtons) do
                        b.BackgroundColor3 = config.backgroundColor
                    end
                    
                    firstPage.Visible = true
                    firstTabButton.BackgroundColor3 = config.accentColor
                    currentPage = firstPage
                end)
            end
            
            -- Create tab button
            local tabButton = Instance.new("TextButton")
            tabButton.Name = pageName .. "Tab"
            tabButton.BackgroundColor3 = config.backgroundColor
            tabButton.Size = UDim2.new(0, 100, 1, 0)
            tabButton.Position = UDim2.new(0, #pageButtons * 110, 0, 0)
            tabButton.Font = config.font
            tabButton.Text = pageName
            tabButton.TextColor3 = config.textColor
            tabButton.TextSize = 14
            tabButton.ZIndex = 13
            tabButton.Parent = tabsContainer
            
            createCorner(tabButton, UDim.new(0, 6))
            
            table.insert(pageButtons, tabButton)
            
            -- Tab button on click behavior
            tabButton.MouseButton1Click:Connect(function()
                for _, p in ipairs(pages) do
                    p.Visible = false
                end
                
                for _, b in ipairs(pageButtons) do
                    b.BackgroundColor3 = config.backgroundColor
                end
                
                pageContainer.Visible = true
                tabButton.BackgroundColor3 = config.accentColor
                currentPage = pageContainer
            end)
        else
            -- If this is the first page, make it visible by default
            pageContainer.Visible = true
            currentPage = pageContainer
        end
        
        table.insert(pages, pageContainer)
        
        -- Page object methods
        local pageObj = {}
        
        function pageObj:AddButton(options)
            local btnOptions = options or {}
            local buttonText = btnOptions.text or "Button"
            local callback = btnOptions.callback or function() end
            local icon = btnOptions.icon
            
            local buttonContainer = Instance.new("Frame")
            buttonContainer.Name = buttonText .. "Container"
            buttonContainer.BackgroundColor3 = config.backgroundColor
            buttonContainer.Size = UDim2.new(1, 0, 0, config.elementHeight)
            buttonContainer.ZIndex = 12
            buttonContainer.Parent = pageContainer
            
            createCorner(buttonContainer, UDim.new(0, 6))
            
            local button = Instance.new("TextButton")
            button.Name = buttonText .. "Button"
            button.BackgroundTransparency = 1
            button.Size = UDim2.new(1, 0, 1, 0)
            button.Font = config.font
            button.Text = ""
            button.ZIndex = 13
            button.Parent = buttonContainer
            
            local buttonLabel = Instance.new("TextLabel")
            buttonLabel.Name = "Label"
            buttonLabel.BackgroundTransparency = 1
            buttonLabel.Position = UDim2.new(0, icon and 30 or 10, 0, 0)
            buttonLabel.Size = UDim2.new(1, icon and -40 or -20, 1, 0)
            buttonLabel.Font = config.font
            buttonLabel.Text = buttonText
            buttonLabel.TextColor3 = config.textColor
            buttonLabel.TextSize = 14
            buttonLabel.TextXAlignment = Enum.TextXAlignment.Left
            buttonLabel.ZIndex = 14
            buttonLabel.Parent = buttonContainer
            
            if icon then
                local iconImage = Instance.new("ImageLabel")
                iconImage.Name = "Icon"
                iconImage.BackgroundTransparency = 1
                iconImage.Position = UDim2.new(0, 8, 0.5, -8)
                iconImage.Size = UDim2.new(0, 16, 0, 16)
                iconImage.Image = icon
                iconImage.ImageColor3 = config.accentColor
                iconImage.ZIndex = 14
                iconImage.Parent = buttonContainer
            end
            
            button.MouseEnter:Connect(function()
                TweenService:Create(buttonContainer, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 45, 55)}):Play()
            end)
            
            button.MouseLeave:Connect(function()
                TweenService:Create(buttonContainer, TweenInfo.new(0.2), {BackgroundColor3 = config.backgroundColor}):Play()
            end)
            
            button.MouseButton1Down:Connect(function()
                local mouse = game:GetService("Players").LocalPlayer:GetMouse()
                local relativeX = mouse.X - buttonContainer.AbsolutePosition.X
                local relativeY = mouse.Y - buttonContainer.AbsolutePosition.Y
                
                playRippleEffect(buttonContainer, relativeX, relativeY)
                
                TweenService:Create(buttonContainer, TweenInfo.new(0.1), {BackgroundColor3 = config.accentColor}):Play()
            end)
            
            button.MouseButton1Up:Connect(function()
                TweenService:Create(buttonContainer, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(40, 45, 55)}):Play()
            end)
            
            button.MouseButton1Click:Connect(callback)
            
            return button
        end
        
        function pageObj:AddToggle(options)
            local toggleOptions = options or {}
            local toggleText = toggleOptions.text or "Toggle"
            local default = toggleOptions.default or false
            local callback = toggleOptions.callback or function() end
            
            local toggleContainer = Instance.new("Frame")
            toggleContainer.Name = toggleText .. "Container"
            toggleContainer.BackgroundColor3 = config.backgroundColor
            toggleContainer.Size = UDim2.new(1, 0, 0, config.elementHeight)
            toggleContainer.ZIndex = 12
            toggleContainer.Parent = pageContainer
            
            createCorner(toggleContainer, UDim.new(0, 6))
            
            local toggleLabel = Instance.new("TextLabel")
            toggleLabel.Name = "Label"
            toggleLabel.BackgroundTransparency = 1
            toggleLabel.Position = UDim2.new(0, 10, 0, 0)
            toggleLabel.Size = UDim2.new(1, -60, 1, 0)
            toggleLabel.Font = config.font
            toggleLabel.Text = toggleText
            toggleLabel.TextColor3 = config.textColor
            toggleLabel.TextSize = 14
            toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
            toggleLabel.ZIndex = 13
            toggleLabel.Parent = toggleContainer
            
            local toggleButton = Instance.new("Frame")
            toggleButton.Name = "ToggleButton"
            toggleButton.BackgroundColor3 = default and config.activeColor or config.inactiveColor
            toggleButton.Position = UDim2.new(1, -50, 0.5, -10)
            toggleButton.Size = UDim2.new(0, 40, 0, 20)
            toggleButton.ZIndex = 13
            toggleButton.Parent = toggleContainer
            
            createCorner(toggleButton, UDim.new(1, 0))
            
            local toggleCircle = Instance.new("Frame")
            toggleCircle.Name = "Circle"
            toggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            toggleCircle.Position = UDim2.new(default and 0.6 or 0, 0, 0, 0)
            toggleCircle.Size = UDim2.new(0.4, 0, 1, 0)
            toggleCircle.ZIndex = 14
            toggleCircle.Parent = toggleButton
            
            createCorner(toggleCircle, UDim.new(1, 0))
            
            local toggleHitbox = Instance.new("TextButton")
            toggleHitbox.Name = "Hitbox"
            toggleHitbox.BackgroundTransparency = 1
            toggleHitbox.Size = UDim2.new(1, 0, 1, 0)
            toggleHitbox.Text = ""
            toggleHitbox.ZIndex = 15
            toggleHitbox.Parent = toggleContainer
            
            local toggled = default
            
            local function updateToggle()
                toggled = not toggled
                local targetPosition = toggled and 0.6 or 0
                local targetColor = toggled and config.activeColor or config.inactiveColor
                
                TweenService:Create(toggleCircle, TweenInfo.new(0.2), {Position = UDim2.new(targetPosition, 0, 0, 0)}):Play()
                TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = targetColor}):Play()
                
                callback(toggled)
            end
            
            toggleHitbox.MouseButton1Click:Connect(updateToggle)
            
            toggleHitbox.MouseEnter:Connect(function()
                TweenService:Create(toggleContainer, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 45, 55)}):Play()
            end)
            
            toggleHitbox.MouseLeave:Connect(function()
                TweenService:Create(toggleContainer, TweenInfo.new(0.2), {BackgroundColor3 = config.backgroundColor}):Play()
            end)
            
            local toggleObj = {
                Toggle = function(value)
                    if value ~= nil then
                        if value ~= toggled then
                            updateToggle()
                        end
                    else
                        updateToggle()
                    end
                end,
                GetValue = function()
                    return toggled
                end
            }
            
            return toggleObj
        end
        
        function pageObj:AddSlider(options)
            local sliderOptions = options or {}
            local sliderText = sliderOptions.text or "Slider"
            local min = sliderOptions.min or 0
            local max = sliderOptions.max or 100
            local default = math.clamp(sliderOptions.default or min, min, max)
            local callback = sliderOptions.callback or function() end
            local suffix = sliderOptions.suffix or ""
            
            local sliderContainer = Instance.new("Frame")
            sliderContainer.Name = sliderText .. "Container"
            sliderContainer.BackgroundColor3 = config.backgroundColor
            sliderContainer.Size = UDim2.new(1, 0, 0, config.elementHeight * 1.5)
            sliderContainer.ZIndex = 12
            sliderContainer.Parent = pageContainer
            
            createCorner(sliderContainer, UDim.new(0, 6))
            
            local sliderLabel = Instance.new("TextLabel")
            sliderLabel.Name = "Label"
            sliderLabel.BackgroundTransparency = 1
            sliderLabel.Position = UDim2.new(0, 10, 0, 5)
            sliderLabel.Size = UDim2.new(1, -20, 0, 20)
            sliderLabel.Font = config.font
            sliderLabel.Text = sliderText
            sliderLabel.TextColor3 = config.textColor
            sliderLabel.TextSize = 14
            sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
            sliderLabel.ZIndex = 13
            sliderLabel.Parent = sliderContainer
            
            local valueLabel = Instance.new("TextLabel")
            valueLabel.Name = "Value"
            valueLabel.BackgroundTransparency = 1
            valueLabel.Position = UDim2.new(1, -60, 0, 5)
            valueLabel.Size = UDim2.new(0, 50, 0, 20)
            valueLabel.Font = config.font
            valueLabel.Text = tostring(default) .. suffix
            valueLabel.TextColor3 = config.accentColor
            valueLabel.TextSize = 14
            valueLabel.TextXAlignment = Enum.TextXAlignment.Right
            valueLabel.ZIndex = 13
            valueLabel.Parent = sliderContainer
            
            local sliderBackground = Instance.new("Frame")
            sliderBackground.Name = "SliderBackground"
            sliderBackground.BackgroundColor3 = Color3.fromRGB(40, 45, 55)
            sliderBackground.Position = UDim2.new(0, 10, 0, 30)
            sliderBackground.Size = UDim2.new(1, -20, 0, 10)
            sliderBackground.ZIndex = 13
            sliderBackground.Parent = sliderContainer
            
            createCorner(sliderBackground, UDim.new(1, 0))
            
            local sliderFill = Instance.new("Frame")
            sliderFill.Name = "SliderFill"
            sliderFill.BackgroundColor3 = config.accentColor
            sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
            sliderFill.ZIndex = 14
            sliderFill.Parent = sliderBackground
            
            createCorner(sliderFill, UDim.new(1, 0))
            
            local sliderKnob = Instance.new("Frame")
            sliderKnob.Name = "SliderKnob"
            sliderKnob.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            sliderKnob.Position = UDim2.new(1, -10, 0.5, -10)
            sliderKnob.Size = UDim2.new(0, 20, 0, 20)
            sliderKnob.ZIndex = 15
            sliderKnob.Parent = sliderFill
            
            createCorner(sliderKnob, UDim.new(1, 0))
            createStroke(sliderKnob, 2, config.accentColor)
            
            local sliderHitbox = Instance.new("TextButton")
            sliderHitbox.Name = "Hitbox"
            sliderHitbox.BackgroundTransparency = 1
            sliderHitbox.Size = UDim2.new(1, 0, 1, 0)
            sliderHitbox.Text = ""
            sliderHitbox.ZIndex = 16
            sliderHitbox.Parent = sliderBackground
            
            local value = default
            local dragging = false
            
            local function updateSlider(input)
                local sizeX = math.clamp((input.Position.X - sliderBackground.AbsolutePosition.X) / sliderBackground.AbsoluteSize.X, 0, 1)
                value = math.floor(min + ((max - min) * sizeX))
                
                TweenService:Create(sliderFill, TweenInfo.new(0.1), {Size = UDim2.new(sizeX, 0, 1, 0)}):Play()
                valueLabel.Text = tostring(value) .. suffix
                
                callback(value)
            end
            
            sliderHitbox.MouseButton1Down:Connect(function(input)
                dragging = true
                updateSlider(input)
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
            
            sliderContainer.MouseEnter:Connect(function()
                TweenService:Create(sliderContainer, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 45, 55)}):Play()
            end)
            
            sliderContainer.MouseLeave:Connect(function()
                TweenService:Create(sliderContainer, TweenInfo.new(0.2), {BackgroundColor3 = config.backgroundColor}):Play()
            end)
            
            local sliderObj = {
                SetValue = function(newValue)
                    value = math.clamp(newValue, min, max)
                    local sizeX = (value - min) / (max - min)
                    
                    TweenService:Create(sliderFill, TweenInfo.new(0.1), {Size = UDim2.new(sizeX, 0, 1, 0)}):Play()
                    valueLabel.Text = tostring(value) .. suffix
                    
                    callback(value)
                end,
                GetValue = function()
                    return value
                end
            }
            
            return sliderObj
        end
        
        function pageObj:AddDropdown(options)
            local dropOptions = options or {}
            local dropText = dropOptions.text or "Dropdown"
            local list = dropOptions.list or {}
            local default = dropOptions.default or (list[1] or "")
            local callback = dropOptions.callback or function() end
            
            local dropContainer = Instance.new("Frame")
            dropContainer.Name = dropText .. "Container"
            dropContainer.BackgroundColor3 = config.backgroundColor
            dropContainer.Size = UDim2.new(1, 0, 0, config.elementHeight)
            dropContainer.ZIndex = 12
            dropContainer.ClipsDescendants = true
            dropContainer.Parent = pageContainer
            
            createCorner(dropContainer, UDim.new(0, 6))
            
            local dropHeader = Instance.new("Frame")
            dropHeader.Name = "Header"
            dropHeader.BackgroundTransparency = 1
            dropHeader.Size = UDim2.new(1, 0, 0, config.elementHeight)
            dropHeader.ZIndex = 13
            dropHeader.Parent = dropContainer
            
            local dropLabel = Instance.new("TextLabel")
            dropLabel.Name = "Label"
            dropLabel.BackgroundTransparency = 1
            dropLabel.Position = UDim2.new(0, 10, 0, 0)
            dropLabel.Size = UDim2.new(1, -60, 1, 0)
            dropLabel.Font = config.font
            dropLabel.Text = dropText
            dropLabel.TextColor3 = config.textColor
            dropLabel.TextSize = 14
            dropLabel.TextXAlignment = Enum.TextXAlignment.Left
            dropLabel.ZIndex = 14
            dropLabel.Parent = dropHeader
            
            local selectedLabel = Instance.new("TextLabel")
            selectedLabel.Name = "Selected"
            selectedLabel.BackgroundTransparency = 1
            selectedLabel.Position = UDim2.new(0, 10, 0, 0)
            selectedLabel.Size = UDim2.new(1, -60, 1, 0)
            selectedLabel.Font = config.font
            selectedLabel.Text = default
            selectedLabel.TextColor3 = config.accentColor
            selectedLabel.TextSize = 14
            selectedLabel.TextXAlignment = Enum.TextXAlignment.Right
            selectedLabel.ZIndex = 14
            selectedLabel.Visible = false
            selectedLabel.Parent = dropHeader
            
            local arrowIcon = Instance.new("ImageLabel")
            arrowIcon.Name = "Arrow"
            arrowIcon.BackgroundTransparency = 1
            arrowIcon.Position = UDim2.new(1, -30, 0.5, -8)
            arrowIcon.Size = UDim2.new(0, 16, 0, 16)
            arrowIcon.Image = "rbxassetid://6031091004" -- Down arrow
            arrowIcon.ImageColor3 = config.textColor
            arrowIcon.ZIndex = 14
            arrowIcon.Parent = dropHeader
            
            local dropContent = Instance.new("Frame")
            dropContent.Name = "Content"
            dropContent.BackgroundTransparency = 1
            dropContent.Position = UDim2.new(0, 0, 0, config.elementHeight)
            dropContent.Size = UDim2.new(1, 0, 0, #list * config.elementHeight)
            dropContent.ZIndex = 15
            dropContent.Parent = dropContainer
            
            local contentLayout = Instance.new("UIListLayout")
            contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
            contentLayout.Parent = dropContent
            
            local dropHitbox = Instance.new("TextButton")
            dropHitbox.Name = "Hitbox"
            dropHitbox.BackgroundTransparency = 1
            dropHitbox.Size = UDim2.new(1, 0, 1, 0)
            dropHitbox.Text = ""
            dropHitbox.ZIndex = 16
            dropHitbox.Parent = dropHeader
            
            local isOpen = false
            local selected = default
            
            -- Create option buttons
            for i, option in ipairs(list) do
                local optionButton = Instance.new("TextButton")
                optionButton.Name = option .. "Option"
                optionButton.BackgroundColor3 = config.backgroundColor
                optionButton.BackgroundTransparency = 0.5
                optionButton.Size = UDim2.new(1, 0, 0, config.elementHeight)
                optionButton.Font = config.font
                optionButton.Text = option
                optionButton.TextColor3 = config.textColor
                optionButton.TextSize = 14
                optionButton.ZIndex = 16
                optionButton.Parent = dropContent
                
                optionButton.MouseEnter:Connect(function()
                    TweenService:Create(optionButton, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(60, 65, 75)}):Play()
                end)
                
                optionButton.MouseLeave:Connect(function()
                    TweenService:Create(optionButton, TweenInfo.new(0.1), {BackgroundColor3 = config.backgroundColor}):Play()
                end)
                
                optionButton.MouseButton1Click:Connect(function()
                    selected = option
                    selectedLabel.Text = selected
                    selectedLabel.Visible = true
                    
                    isOpen = false
                    TweenService:Create(dropContainer, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, config.elementHeight)}):Play()
                    TweenService:Create(arrowIcon, TweenInfo.new(0.2), {Rotation = 0}):Play()
                    
                    callback(selected)
                end)
            end
            
            dropHitbox.MouseEnter:Connect(function()
                TweenService:Create(dropContainer, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 45, 55)}):Play()
            end)
            
            dropHitbox.MouseLeave:Connect(function()
                if not isOpen then
                    TweenService:Create(dropContainer, TweenInfo.new(0.2), {BackgroundColor3 = config.backgroundColor}):Play()
                end
            end)
            
            dropHitbox.MouseButton1Click:Connect(function()
                isOpen = not isOpen
                
                if isOpen then
                    TweenService:Create(dropContainer, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, config.elementHeight + contentLayout.AbsoluteContentSize.Y)}):Play()
                    TweenService:Create(arrowIcon, TweenInfo.new(0.2), {Rotation = 180}):Play()
                else
                    TweenService:Create(dropContainer, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, config.elementHeight)}):Play()
                    TweenService:Create(arrowIcon, TweenInfo.new(0.2), {Rotation = 0}):Play()
                end
            end)
            
            -- Initially display selected value
            if default ~= "" then
                selectedLabel.Visible = true
            end
            
            local dropdownObj = {
                SetValue = function(newValue)
                    if table.find(list, newValue) then
                        selected = newValue
                        selectedLabel.Text = selected
                        selectedLabel.Visible = true
                        callback(selected)
                    end
                end,
                GetValue = function()
                    return selected
                end,
                Refresh = function(newList, keepSelection)
                    list = newList
                    
                    -- Clear existing options
                    for _, child in pairs(dropContent:GetChildren()) do
                        if child:IsA("TextButton") then
                            child:Destroy()
                        end
                    end
                    
                    -- Recreate options
                    for i, option in ipairs(list) do
                        local optionButton = Instance.new("TextButton")
                        optionButton.Name = option .. "Option"
                        optionButton.BackgroundColor3 = config.backgroundColor
                        optionButton.BackgroundTransparency = 0.5
                        optionButton.Size = UDim2.new(1, 0, 0, config.elementHeight)
                        optionButton.Font = config.font
                        optionButton.Text = option
                        optionButton.TextColor3 = config.textColor
                        optionButton.TextSize = 14
                        optionButton.ZIndex = 16
                        optionButton.Parent = dropContent
                        
                        optionButton.MouseEnter:Connect(function()
                            TweenService:Create(optionButton, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(60, 65, 75)}):Play()
                        end)
                        
                        optionButton.MouseLeave:Connect(function()
                            TweenService:Create(optionButton, TweenInfo.new(0.1), {BackgroundColor3 = config.backgroundColor}):Play()
                        end)
                        
                        optionButton.MouseButton1Click:Connect(function()
                            selected = option
                            selectedLabel.Text = selected
                            selectedLabel.Visible = true
                            
                            isOpen = false
                            TweenService:Create(dropContainer, TweenInfo.new(0.2), {Size = UDim2.new(1, 0, 0, config.elementHeight)}):Play()
                            TweenService:Create(arrowIcon, TweenInfo.new(0.2), {Rotation = 0}):Play()
                            
                            callback(selected)
                        end)
                    end
                    
                    -- Resize content frame
                    dropContent.Size = UDim2.new(1, 0, 0, #list * config.elementHeight)
                    
                    -- Update selection
                    if not keepSelection or not table.find(list, selected) then
                        if #list > 0 then
                            selected = list[1]
                            selectedLabel.Text = selected
                            selectedLabel.Visible = true
                        else
                            selected = ""
                            selectedLabel.Text = ""
                            selectedLabel.Visible = false
                        end
                    end
                end
            }
            
            return dropdownObj
        end
        
        function pageObj:AddTextbox(options)
            local textboxOptions = options or {}
            local textboxText = textboxOptions.text or "Textbox"
            local default = textboxOptions.default or ""
            local placeholder = textboxOptions.placeholder or "Type here..."
            local callback = textboxOptions.callback or function() end
            
            local textboxContainer = Instance.new("Frame")
            textboxContainer.Name = textboxText .. "Container"
            textboxContainer.BackgroundColor3 = config.backgroundColor
            textboxContainer.Size = UDim2.new(1, 0, 0, config.elementHeight)
            textboxContainer.ZIndex = 12
            textboxContainer.Parent = pageContainer
            
            createCorner(textboxContainer, UDim.new(0, 6))
            
            local textboxLabel = Instance.new("TextLabel")
            textboxLabel.Name = "Label"
            textboxLabel.BackgroundTransparency = 1
            textboxLabel.Position = UDim2.new(0, 10, 0, 0)
            textboxLabel.Size = UDim2.new(0.4, -10, 1, 0)
            textboxLabel.Font = config.font
            textboxLabel.Text = textboxText
            textboxLabel.TextColor3 = config.textColor
            textboxLabel.TextSize = 14
            textboxLabel.TextXAlignment = Enum.TextXAlignment.Left
            textboxLabel.ZIndex = 13
            textboxLabel.Parent = textboxContainer
            
            local textboxFrame = Instance.new("Frame")
            textboxFrame.Name = "TextboxFrame"
            textboxFrame.BackgroundColor3 = Color3.fromRGB(35, 40, 50)
            textboxFrame.Position = UDim2.new(0.4, 5, 0.5, -15)
            textboxFrame.Size = UDim2.new(0.6, -15, 0, 30)
            textboxFrame.ZIndex = 13
            textboxFrame.Parent = textboxContainer
            
            createCorner(textboxFrame, UDim.new(0, 6))
            
            local textbox = Instance.new("TextBox")
            textbox.Name = "Textbox"
            textbox.BackgroundTransparency = 1
            textbox.Size = UDim2.new(1, -10, 1, 0)
            textbox.Position = UDim2.new(0, 5, 0, 0)
            textbox.Font = config.font
            textbox.Text = default
            textbox.PlaceholderText = placeholder
            textbox.TextColor3 = config.textColor
            textbox.PlaceholderColor3 = Color3.fromRGB(120, 120, 120)
            textbox.TextSize = 14
            textbox.TextXAlignment = Enum.TextXAlignment.Left
            textbox.ClearTextOnFocus = false
            textbox.ZIndex = 14
            textbox.Parent = textboxFrame
            
            textboxContainer.MouseEnter:Connect(function()
                TweenService:Create(textboxContainer, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 45, 55)}):Play()
            end)
            
            textboxContainer.MouseLeave:Connect(function()
                TweenService:Create(textboxContainer, TweenInfo.new(0.2), {BackgroundColor3 = config.backgroundColor}):Play()
            end)
            
            textbox.Focused:Connect(function()
                TweenService:Create(textboxFrame, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(45, 50, 60)}):Play()
            end)
            
            textbox.FocusLost:Connect(function(enterPressed)
                TweenService:Create(textboxFrame, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(35, 40, 50)}):Play()
                callback(textbox.Text, enterPressed)
            end)
            
            local textboxObj = {
                SetValue = function(newValue)
                    textbox.Text = tostring(newValue)
                    callback(textbox.Text, false)
                end,
                GetValue = function()
                    return textbox.Text
                end
            }
            
            return textboxObj
        end
        
        function pageObj:AddLabel(options)
            local labelOptions = options or {}
            local labelText = labelOptions.text or "Label"
            local labelColor = labelOptions.color or config.textColor
            
            local labelContainer = Instance.new("Frame")
            labelContainer.Name = "LabelContainer"
            labelContainer.BackgroundTransparency = 1
            labelContainer.Size = UDim2.new(1, 0, 0, 30)
            labelContainer.ZIndex = 12
            labelContainer.Parent = pageContainer
            
            local label = Instance.new("TextLabel")
            label.Name = "Label"
            label.BackgroundTransparency = 1
            label.Size = UDim2.new(1, 0, 1, 0)
            label.Font = config.font
            label.Text = labelText
            label.TextColor3 = labelColor
            label.TextSize = 14
            label.TextWrapped = true
            label.ZIndex = 13
            label.Parent = labelContainer
            
            local labelObj = {
                SetText = function(newText)
                    label.Text = newText
                end
            }
            
            return labelObj
        end
        
        function pageObj:AddDivider()
            local dividerContainer = Instance.new("Frame")
            dividerContainer.Name = "DividerContainer"
            dividerContainer.BackgroundTransparency = 1
            dividerContainer.Size = UDim2.new(1, 0, 0, 15)
            dividerContainer.ZIndex = 12
            dividerContainer.Parent = pageContainer
            
            local divider = Instance.new("Frame")
            divider.Name = "Divider"
            divider.BackgroundColor3 = Color3.fromRGB(60, 65, 75)
            divider.BorderSizePixel = 0
            divider.Position = UDim2.new(0, 0, 0.5, 0)
            divider.Size = UDim2.new(1, 0, 0, 1)
            divider.ZIndex = 13
            divider.Parent = dividerContainer
            
            return dividerContainer
        end
        
        function pageObj:AddItemGrid(items, columns, callback)
            local gridContainer = Instance.new("Frame")
            gridContainer.Name = "GridContainer"
            gridContainer.BackgroundColor3 = config.backgroundColor
            gridContainer.BackgroundTransparency = 0.5
            gridContainer.Size = UDim2.new(1, 0, 0, 200) -- Will be adjusted based on content
            gridContainer.ZIndex = 12
            gridContainer.Parent = pageContainer
            
            createCorner(gridContainer, UDim.new(0, 6))
            
            local gridLayout = Instance.new("UIGridLayout")
            gridLayout.CellPadding = UDim2.new(0, 10, 0, 10)
            gridLayout.CellSize = UDim2.new(1 / columns, -10 + (10 / columns), 0, 40)
            gridLayout.SortOrder = Enum.SortOrder.LayoutOrder
            gridLayout.Parent = gridContainer
            
            local gridPadding = Instance.new("UIPadding")
            gridPadding.PaddingLeft = UDim.new(0, 10)
            gridPadding.PaddingRight = UDim.new(0, 10)
            gridPadding.PaddingTop = UDim.new(0, 10)
            gridPadding.PaddingBottom = UDim.new(0, 10)
            gridPadding.Parent = gridContainer
            
            -- Add items
            for i, item in ipairs(items) do
                local itemButton = Instance.new("TextButton")
                itemButton.Name = item .. "Button"
                itemButton.BackgroundColor3 = Color3.fromRGB(40, 45, 55)
                itemButton.Text = ""
                itemButton.ZIndex = 13
                itemButton.Parent = gridContainer
                
                createCorner(itemButton, UDim.new(0, 6))
                
                local itemLabel = Instance.new("TextLabel")
                itemLabel.Name = "Label"
                itemLabel.BackgroundTransparency = 1
                itemLabel.Size = UDim2.new(1, 0, 1, 0)
                itemLabel.Font = config.font
                itemLabel.Text = item
                itemLabel.TextColor3 = config.textColor
                itemLabel.TextSize = 14
                itemLabel.ZIndex = 14
                itemLabel.Parent = itemButton
                
                itemButton.MouseEnter:Connect(function()
                    TweenService:Create(itemButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 65, 75)}):Play()
                end)
                
                itemButton.MouseLeave:Connect(function()
                    TweenService:Create(itemButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 45, 55)}):Play()
                end)
                
                itemButton.MouseButton1Down:Connect(function()
                    TweenService:Create(itemButton, TweenInfo.new(0.1), {BackgroundColor3 = config.accentColor}):Play()
                end)
                
                itemButton.MouseButton1Up:Connect(function()
                    TweenService:Create(itemButton, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(60, 65, 75)}):Play()
                end)
                
                itemButton.MouseButton1Click:Connect(function()
                    callback(item, i)
                end)
            end
            
            -- Adjust container height based on content
            gridLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                gridContainer.Size = UDim2.new(1, 0, 0, gridLayout.AbsoluteContentSize.Y + 20)
            end)
            
            local gridObj = {
                Container = gridContainer,
                Refresh = function(newItems)
                    -- Clear existing buttons
                    for _, child in ipairs(gridContainer:GetChildren()) do
                        if child:IsA("TextButton") then
                            child:Destroy()
                        end
                    end
                    
                    -- Add new items
                    for i, item in ipairs(newItems) do
                        local itemButton = Instance.new("TextButton")
                        itemButton.Name = item .. "Button"
                        itemButton.BackgroundColor3 = Color3.fromRGB(40, 45, 55)
                        itemButton.Text = ""
                        itemButton.ZIndex = 13
                        itemButton.Parent = gridContainer
                        
                        createCorner(itemButton, UDim.new(0, 6))
                        
                        local itemLabel = Instance.new("TextLabel")
                        itemLabel.Name = "Label"
                        itemLabel.BackgroundTransparency = 1
                        itemLabel.Size = UDim2.new(1, 0, 1, 0)
                        itemLabel.Font = config.font
                        itemLabel.Text = item
                        itemLabel.TextColor3 = config.textColor
                        itemLabel.TextSize = 14
                        itemLabel.ZIndex = 14
                        itemLabel.Parent = itemButton
                        
                        itemButton.MouseEnter:Connect(function()
                            TweenService:Create(itemButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(60, 65, 75)}):Play()
                        end)
                        
                        itemButton.MouseLeave:Connect(function()
                            TweenService:Create(itemButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(40, 45, 55)}):Play()
                        end)
                        
                        itemButton.MouseButton1Down:Connect(function()
                            TweenService:Create(itemButton, TweenInfo.new(0.1), {BackgroundColor3 = config.accentColor}):Play()
                        end)
                        
                        itemButton.MouseButton1Up:Connect(function()
                            TweenService:Create(itemButton, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(60, 65, 75)}):Play()
                        end)
                        
                        itemButton.MouseButton1Click:Connect(function()
                            callback(item, i)
                        end)
                    end
                end
            }
            
            return gridObj
        end
        
        return pageObj
    end
    
    -- Create predefined pages based on the MRH Premium UI
    local autoFarmPage = windowObj:AddPage("Auto Farm")
    local autoRacePage = windowObj:AddPage("Auto Race")
    local moneyFarmPage = windowObj:AddPage("Money Farm")
    local settingsPage = windowObj:AddPage("Settings")
    
    -- Add starter elements to the Auto Farm page
    autoFarmPage:AddLabel({text = "Auto Farming Options", color = config.accentColor})
    autoFarmPage:AddToggle({text = "Enable Auto Farm", default = false, callback = function(value)
        print("Auto Farm Enabled:", value)
    end})
    
    autoFarmPage:AddSlider({text = "Farm Speed", min = 1, max = 100, default = 50, suffix = "%", callback = function(value)
        print("Farm Speed:", value)
    end})
    
    autoFarmPage:AddDropdown({text = "Farm Type", list = {"XP", "Money", "Items", "All"}, default = "XP", callback = function(value)
        print("Farm Type:", value)
    end})
    
    autoFarmPage:AddButton({text = "Start Automatic Farming", callback = function()
        print("Started automatic farming")
    end})
    
    -- Add starter elements to the Auto Race page
    autoRacePage:AddLabel({text = "Auto Racing Options", color = config.accentColor})
    autoRacePage:AddToggle({text = "Auto Join Races", default = false, callback = function(value)
        print("Auto Join Races:", value)
    end})
    
    autoRacePage:AddToggle({text = "Auto Complete Races", default = false, callback = function(value)
        print("Auto Complete Races:", value)
    end})
    
    autoRacePage:AddDropdown({text = "Race Type", list = {"Circuit", "Sprint", "Drag", "Drift", "All"}, default = "Circuit", callback = function(value)
        print("Race Type:", value)
    end})
    
    autoRacePage:AddButton({text = "Join and Complete Races", callback = function()
        print("Started auto race system")
    end})
    
    -- Add starter elements to the Money Farm page
    moneyFarmPage:AddLabel({text = "Money Farming Options", color = config.accentColor})
    moneyFarmPage:AddToggle({text = "Enable Money Farm", default = false, callback = function(value)
        print("Money Farm Enabled:", value)
    end})
    
    moneyFarmPage:AddSlider({text = "Farm Amount", min = 1000, max = 10000000, default = 100000, callback = function(value)
        print("Target Farm Amount:", value)
    end})
    
    moneyFarmPage:AddDropdown({text = "Farm Method", list = {"Quick", "Stealth", "Max Profit", "Safe"}, default = "Quick", callback = function(value)
        print("Farm Method:", value)
    end})
    
    moneyFarmPage:AddButton({text = "Fast Currency Earning", callback = function()
        print("Started fast currency earning")
    end})
    
    -- Add starter elements to the Settings page
    settingsPage:AddLabel({text = "UI Settings", color = config.accentColor})
    
    settingsPage:AddToggle({text = "UI Sounds", default = true, callback = function(value)
        print("UI Sounds:", value)
    end})
    
    settingsPage:AddToggle({text = "Notifications", default = true, callback = function(value)
        print("Notifications:", value)
    end})
    
    settingsPage:AddDropdown({text = "Theme", list = {"Dark", "Light", "Blue", "Red", "Green"}, default = "Dark", callback = function(value)
        print("Theme:", value)
    end})
    
    settingsPage:AddSlider({text = "UI Transparency", min = 0, max = 100, default = 0, suffix = "%", callback = function(value)
        print("UI Transparency:", value)
    end})
    
    settingsPage:AddButton({text = "Customize Your Experience", callback = function()
        print("Opening customization options")
    end})
    
    return windowObj
end

-- Initialize the library
return MidnightUI
